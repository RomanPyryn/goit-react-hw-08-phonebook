{"version":3,"file":"static/js/176.3e54a2a9.chunk.js","mappings":"gRAQAA,IAAAA,SAAAA,QAAyB,wCAGlB,I,wDAAMC,EAAa,qDAAM,WAAMC,GAAN,gFAC9BA,GAASC,EAAAA,EAAAA,OADqB,SAGPH,GAAAA,CAAM,aAHC,cAGxBI,EAHwB,yBAMRA,EAASC,KAND,OAMtBC,EANsB,OAO5BJ,GAASK,EAAAA,EAAAA,IAAkBD,IAPC,kDAS5BJ,GAASM,EAAAA,EAAAA,IAAkB,KAAMC,UACjCC,EAAAA,GAAAA,MAAY,gCAVgB,0DAAN,uDAebC,EAAU,SAAAC,GAAI,0CAAI,WAAMV,GAAN,8EAC7BA,GAASC,EAAAA,EAAAA,OADoB,SAGNH,IAAAA,KAAW,YAAaY,GAHlB,cAGvBR,EAHuB,yBAMrBA,EAASC,KANY,OAO3BH,EAASD,KACTS,EAAAA,GAAAA,QAAA,WAAkBE,EAAKC,KAAvB,8BAR2B,kDAU3BX,GAASM,EAAAA,EAAAA,IAAkB,KAAMC,UACjCC,EAAAA,GAAAA,MAAY,gCAXe,0DAAJ,uDA+BdI,EAAW,SAACF,EAAMG,GAAP,0CAAkB,WAAMb,GAAN,gFACxCA,GAASC,EAAAA,EAAAA,OAD+B,SAGjBH,IAAAA,MAAA,oBAAyBe,GAAUH,GAHlB,cAGlCR,EAHkC,yBAMnBA,EAASC,KANU,OAMhCO,EANgC,OAOtCV,EAASD,KACTS,EAAAA,GAAAA,KAAA,mBAAuBE,EAAKC,KAA5B,cARsC,kDAUtCX,GAASM,EAAAA,EAAAA,IAAkB,KAAMC,UACjCC,EAAAA,GAAAA,MAAY,gCAX0B,0DAAlB,uD,mBCvDXM,EAAqBC,EAAAA,EAAAA,IAAH,oGAMlBC,EAAgBD,EAAAA,EAAAA,KAAH,qJASbE,EAAiBF,EAAAA,EAAAA,MAAH,6HAOdG,EAAiBH,EAAAA,EAAAA,MAAH,sLASdI,EAAeJ,EAAAA,EAAAA,OAAH,+lBA6BZK,EAAYL,EAAAA,EAAAA,IAAH,sE,SCqBtB,EAtEoB,WAClB,OAA2CM,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAA9DmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UACvBzB,GAAW0B,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,gFACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cACTC,EAAYF,EAAKG,SAAStB,KAAKuB,MAC/BC,EAAcL,EAAKG,SAASG,OAAOF,OAGvCX,EAASc,MACP,SAAAC,GAAO,OAAIA,EAAQ3B,KAAK4B,gBAAkBP,EAAUQ,uBARrC,yCAWVhC,EAAAA,GAAAA,KAAA,WAAewB,EAAf,+BAXU,cAcbS,EAAa,CAAE9B,KAAMqB,EAAWI,OAAQD,GAd3B,SAgBbnC,EAASS,EAAQgC,IAhBJ,OAiBfhB,GACFK,EAAKY,QAlBY,4CAAH,sDAsBlB,OACE,UAAC5B,EAAD,YACE,UAACE,EAAD,CAAe2B,SAAUhB,EAAzB,WACE,UAACV,EAAD,CAAgB2B,QAAQ,GAAxB,kBAEE,SAAC1B,EAAD,CACE2B,KAAK,OACLlC,KAAK,OACLmC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,UAAC/B,EAAD,CAAgB2B,QAAQ,GAAxB,oBAEE,SAAC1B,EAAD,CACE2B,KAAK,MACLlC,KAAK,SACLmC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,SAAC7B,EAAD,CAAc0B,KAAK,SAASI,SAAUzB,EAAtC,SACGA,GACC,SAACJ,EAAD,WACE,SAAC,KAAD,CAAU8B,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OAG/C,qBAIN,gBACEC,IAAI,0DACJC,IAAI,YACJF,MAAM,c,UC3EDG,GAAYxC,EAAAA,EAAAA,IAAH,yFAMTyC,GAAczC,EAAAA,EAAAA,MAAH,oGAMX0C,GAAc1C,EAAAA,EAAAA,MAAH,mLCQxB,GAlBe,WACb,IAAM2C,GAASrC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoC,OAAOxB,SAC3ClC,GAAW0B,EAAAA,EAAAA,MAMjB,OACE,SAAC6B,GAAD,WACE,UAACC,GAAD,CAAaZ,QAAQ,GAArB,WACE,SAACa,GAAD,CAAaZ,KAAK,OAAOX,MAAOwB,EAAQC,SAPzB,SAAA/B,GACnB5B,GAAS4D,EAAAA,EAAAA,IAAUhC,EAAEG,cAAcG,WAKjC,8B,gCCZO2B,GAAU9C,EAAAA,EAAAA,IAAH,uOAaP+C,GAAU/C,EAAAA,EAAAA,IAAH,oQAYPgD,GAAWhD,EAAAA,EAAAA,KAAH,6KAURiD,GAAYjD,EAAAA,EAAAA,MAAH,6HAOTkD,GAAYlD,EAAAA,EAAAA,MAAH,sLASTmD,GAAUnD,EAAAA,EAAAA,OAAH,qjBA2BPoD,GAAapD,EAAAA,EAAAA,IAAH,yHAOVK,GAAYL,EAAAA,EAAAA,IAAH,sEAKTqD,GAAqBrD,EAAAA,EAAAA,GAAH,yHCzEzBsD,GAAYC,SAASC,cAAc,eA8GzC,GA5GoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC9B,GAA2CpD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAA9DmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UACvBzB,GAAW0B,EAAAA,EAAAA,MAEXgD,EAAcnD,EAASc,MAAK,SAAAC,GAAO,OAAIA,EAAQqC,KAAOF,KAAW9D,KACjEiE,EAAgBrD,EAASc,MAAK,SAAAC,GAAO,OAAIA,EAAQqC,KAAOF,KAAWrC,OAEzE,GAAwByC,EAAAA,GAAAA,UAASH,GAAjC,gBAAO/D,EAAP,KAAamE,EAAb,KACA,GAA4BD,EAAAA,GAAAA,UAASD,GAArC,gBAAOxC,EAAP,KAAe2C,EAAf,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUtE,EAAoB,EAApBA,KAAMuB,EAAc,EAAdA,MACtC,OAAQvB,GACN,IAAK,OACH,OAAOmE,EAAQ5C,GACjB,IAAK,SACH,OAAO6C,EAAU7C,GACnB,QACE,SAIAP,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIqD,EAAgB,CAAEvE,KAAAA,EAAMyB,OAAAA,GAFX,SAGbpC,EAASY,EAASsE,EAAeT,IAHpB,OAIfhD,GACF+C,IALiB,2CAAH,uDAWlBW,EAAAA,GAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAxD,GACL,WAAXA,EAAEyD,MACJb,KAKJ,OADAc,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,CAACZ,IAQJ,OAAOiB,EAAAA,GAAAA,eACL,SAAC5B,GAAD,CAAS6B,QAPgB,SAAA9D,GACrBA,EAAEqD,SAAWrD,EAAEG,eACjByC,KAKF,UACE,UAACV,GAAD,YACE,SAACM,GAAD,4BACA,UAACL,GAAD,CAAUpB,SAAUhB,EAApB,WACE,UAACqC,GAAD,CAAWpB,QAAQ,GAAnB,kBAEE,SAACqB,GAAD,CACEpB,KAAK,OACLlC,KAAK,OACLuB,MAAOvB,EACPmC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRW,SAAUqB,QAId,UAAChB,GAAD,CAAWpB,QAAQ,GAAnB,oBAEE,SAACqB,GAAD,CACEpB,KAAK,MACLlC,KAAK,SACLuB,MAAOE,EACPU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRW,SAAUqB,QAId,UAACb,GAAD,YACE,SAACD,GAAD,CAASrB,KAAK,SAASI,SAAUzB,EAAjC,SACGA,GACC,SAAC,GAAD,WACE,SAAC,KAAD,CAAU0B,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OAG/C,UAGJ,SAACc,GAAD,CAASrB,KAAK,SAASI,SAAUzB,EAAWkE,QAASlB,EAArD,8BAORH,KCtHSsB,GAAgB5E,EAAAA,EAAAA,GAAH,qGAOb6E,GAAc7E,EAAAA,EAAAA,GAAH,6HAOX8E,GAAuB9E,EAAAA,EAAAA,IAAH,sPAiBpB+E,GAAmB/E,EAAAA,EAAAA,OAAH,ofAwBhBgF,GAAiBhF,EAAAA,EAAAA,OAAH,kfAwBdK,GAAYL,EAAAA,EAAAA,IAAH,sECatB,GA9EoB,WAClB,IAAM2C,GAASrC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoC,OAAOxB,SACjD,GAAuCb,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAA1DmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWwE,EAA7B,EAA6BA,MACvBhG,GAAW0B,EAAAA,EAAAA,MACjB,GAAkCmD,EAAAA,GAAAA,WAAS,GAA3C,gBAAOoB,EAAP,KAAkBC,EAAlB,KACA,GAAkCrB,EAAAA,GAAAA,UAAS,IAA3C,gBAAOJ,EAAP,KAAkB0B,EAAlB,KAEMC,EAAgB,SAAC3B,EAAWC,GRmBV,IAAA7D,EQlBtBb,GRkBsBa,EQlBF4D,ERkBQ,mCAAI,WAAMzE,GAAN,8EAClCA,GAASC,EAAAA,EAAAA,OADyB,SAGXH,IAAAA,OAAA,oBAA0Be,IAHf,cAG5BX,EAH4B,yBAM1BA,EAASC,KANiB,OAOhCH,EAASD,KAPuB,kDAShCC,GAASM,EAAAA,EAAAA,IAAkB,KAAMC,UACjCC,EAAAA,GAAAA,MAAY,gCAVoB,0DAAJ,wDQjB5BA,EAAAA,GAAAA,KAAA,WAAekE,EAAf,oCASFS,EAAAA,GAAAA,YAAU,WACRnF,EAASD,OACR,CAACC,IAEJ,IAAMqG,EAAc,WAClBH,GAAcD,IAGVK,EAAe,SAAA1E,GACnBuE,EAAavE,EAAEG,cAAcG,OAC7BmE,KAGF,OACE,gCACGL,IAAS,uBAAIA,IACZzE,GAKA,SAACoE,GAAD,UA1BGpE,EAASmC,QAAO,SAAApB,GAAO,OAC5BA,EAAQ3B,KAAK4B,cAAcgE,SAAS7C,EAAOnB,kBA0BjBiE,KAAI,SAAAlE,GAAO,OAC/B,UAACsD,GAAD,YACE,UAACC,GAAD,YACE,gBACExC,IAAI,sDACJC,IAAI,eACJF,MAAM,OACND,OAAO,UAET,0BAAOb,EAAQ3B,QACf,gBACE0C,IAAI,wDACJC,IAAI,eACJF,MAAM,OACND,OAAO,UAET,0BAAOb,EAAQF,aAEjB,SAAC2D,GAAD,CACElD,KAAK,SACLX,MAAOI,EAAQqC,GACfe,QAASY,EACTrD,SAAUzB,KAEZ,SAACsE,GAAD,CACEjD,KAAK,SACL6C,QAAS,kBAAMU,EAAc9D,EAAQqC,GAAIrC,EAAQ3B,OACjDsC,SAAUzB,MA1BIc,EAAQqC,UAN9B,SAAC,GAAD,WACE,SAAC,KAAD,CAAUzB,MAAM,OAAOC,OAAQ,GAAIC,MAAO,OAqC7C6C,IAAa,SAAC,GAAD,CAAazB,QAAS6B,EAAa5B,UAAWA,QCvFrDgC,GAAY1F,EAAAA,EAAAA,QAAH,kMAUT2F,GAAU3F,EAAAA,EAAAA,IAAH,oDAIP4F,GAAc5F,EAAAA,EAAAA,IAAH,4CAIX6F,GAAiB7F,EAAAA,EAAAA,GAAH,4HCVZ,SAAS8F,KACtB,OACE,UAACJ,GAAD,YACE,SAACC,GAAD,WACE,SAAC,EAAD,OAEF,SAACE,GAAD,wBACA,UAACD,GAAD,YACE,SAAC,GAAD,KACA,SAAC,GAAD","sources":["redux/itemsApi.js","components/Phonebook/ContactForm/ContactForm.styled.jsx","components/Phonebook/ContactForm/index.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/index.jsx","components/Phonebook/ContactEdit/ContactEdit.styled.jsx","components/Phonebook/ContactEdit/index.jsx","components/Phonebook/ContactList/ContactList.styled.jsx","components/Phonebook/ContactList/index.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  fetchItemsRequest,\n  fetchItemsSuccess,\n  fetchItemsFailure,\n} from 'redux/items';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n//  Get user contacts\nexport const fetchItems = () => async dispatch => {\n  dispatch(fetchItemsRequest());\n\n  const response = await axios('/contacts');\n\n  try {\n    const items = await response.data;\n    dispatch(fetchItemsSuccess(items));\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Add new contact\nexport const addItem = item => async dispatch => {\n  dispatch(fetchItemsRequest());\n\n  const response = await axios.post('/contacts', item);\n\n  try {\n    await response.data;\n    dispatch(fetchItems());\n    toast.success(`\"${item.name}\" added to your contacts!`);\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Delete contact\nexport const removeItem = itemId => async dispatch => {\n  dispatch(fetchItemsRequest());\n\n  const response = await axios.delete(`/contacts/${itemId}`);\n\n  try {\n    await response.data;\n    dispatch(fetchItems());\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Edit contact\nexport const editItem = (item, itemId) => async dispatch => {\n  dispatch(fetchItemsRequest());\n\n  const response = await axios.patch(`/contacts/${itemId}`, item);\n\n  try {\n    const item = await response.data;\n    dispatch(fetchItems());\n    toast.info(`Contact \"${item.name}\" edited!`);\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const PhonebookContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const PhonebookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  width: 250px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const PhonebookLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const PhonebookInput = styled.input`\n  outline: none;\n  padding: 5px;\n  margin-top: 5px;\n  border: 1px solid aliceblue;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const PhonebookBtn = styled.button`\n  cursor: pointer;\n  width: 100px;\n  margin-left: auto;\n  margin-top: 5px;\n  padding: 5px;\n  font-weight: 600;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    background-color: lightgoldenrodyellow;\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    box-shadow: rgba(0, 0, 0, 0.44) 0px 3px 8px;\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { TailSpin } from 'react-loader-spinner';\nimport { addItem } from '../../../redux/itemsApi';\nimport {\n  PhonebookContainer,\n  PhonebookForm,\n  PhonebookLabel,\n  PhonebookBtn,\n  PhonebookInput,\n  SpinerBox,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const { contacts, isLoading, isSuccess } = useSelector(state => state.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const inputName = form.elements.name.value;\n    const inputNamber = form.elements.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === inputName.toLocaleLowerCase()\n      )\n    ) {\n      return toast.warn(`\"${inputName}\" is already in contacts.`);\n    }\n\n    const contactObj = { name: inputName, number: inputNamber };\n\n    await dispatch(addItem(contactObj));\n    if (isSuccess) {\n      form.reset();\n    }\n  };\n\n  return (\n    <PhonebookContainer>\n      <PhonebookForm onSubmit={handleSubmit}>\n        <PhonebookLabel htmlFor=\"\">\n          Name\n          <PhonebookInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </PhonebookLabel>\n\n        <PhonebookLabel htmlFor=\"\">\n          Number\n          <PhonebookInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </PhonebookLabel>\n\n        <PhonebookBtn type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <SpinerBox>\n              <TailSpin color=\"#007bcd\" height={16} width={16} />\n            </SpinerBox>\n          ) : (\n            '+Add Contact'\n          )}\n        </PhonebookBtn>\n      </PhonebookForm>\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/512/1485/1485097.png\"\n        alt=\"Phonebook\"\n        width=\"125px\"\n      />\n    </PhonebookContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 30px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const FilterInput = styled.input`\n  width: 200px;\n  outline: none;\n  padding: 5px;\n  border: 1px solid aliceblue;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterLabel htmlFor=\"\">\n        <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n        Find contacts by name\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const EditBox = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 35px;\n  background-color: aliceblue;\n  border: 2px solid lightblue;\n  border-radius: 6px;\n`;\n\nexport const EditForm = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 20px;\n  width: 250px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const EditLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const EditInput = styled.input`\n  outline: none;\n  padding: 5px;\n  margin-top: 5px;\n  border: 1px solid aliceblue;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const EditBtn = styled.button`\n  cursor: pointer;\n  width: 100px;\n  padding: 5px;\n  font-weight: 600;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    background-color: lightgoldenrodyellow;\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    box-shadow: rgba(0, 0, 0, 0.44) 0px 3px 8px;\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const EditBtnBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const EditContactsHeader = styled.h1`\n  margin: 0 0 20px;\n  text-align: center;\n  color: #007bcd;\n  text-shadow: 1px 1px 3px gray;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { TailSpin } from 'react-loader-spinner';\nimport { editItem } from '../../../redux/itemsApi';\nimport {\n  Overlay,\n  EditBox,\n  EditForm,\n  EditLabel,\n  EditBtn,\n  EditInput,\n  EditBtnBox,\n  SpinerBox,\n  EditContactsHeader,\n} from './ContactEdit.styled';\nimport { useState } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ContactEdit = ({ onClose, contactId }) => {\n  const { contacts, isLoading, isSuccess } = useSelector(state => state.items);\n  const dispatch = useDispatch();\n\n  const contactName = contacts.find(contact => contact.id === contactId).name;\n  const contactNumber = contacts.find(contact => contact.id === contactId).number;\n\n  const [name, setName] = useState(contactName);\n  const [number, setNumber] = useState(contactNumber);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const editedContact = { name, number };\n    await dispatch(editItem(editedContact, contactId));\n    if (isSuccess) {\n      onClose();\n    }\n  };\n\n  // dispatch(editItem(contactObj, contactId));\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onClose]);\n\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <EditBox>\n        <EditContactsHeader>Edit contact</EditContactsHeader>\n        <EditForm onSubmit={handleSubmit}>\n          <EditLabel htmlFor=\"\">\n            Name\n            <EditInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n            />\n          </EditLabel>\n\n          <EditLabel htmlFor=\"\">\n            Number\n            <EditInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n            />\n          </EditLabel>\n\n          <EditBtnBox>\n            <EditBtn type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <SpinerBox>\n                  <TailSpin color=\"#007bcd\" height={16} width={16} />\n                </SpinerBox>\n              ) : (\n                'Edit'\n              )}\n            </EditBtn>\n            <EditBtn type=\"button\" disabled={isLoading} onClick={onClose}>\n              Close\n            </EditBtn>\n          </EditBtnBox>\n        </EditForm>\n      </EditBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nContactEdit.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactEdit;\n","import styled from '@emotion/styled';\n\nexport const ContactListUl = styled.ul`\n  margin: 10px 0;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    margin-right: 5px;\n  }\n\n  span {\n    width: 150px;\n    margin-right: 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/6861/6861362.png');\n  background-size: cover;\n  border: none;\n  background-color: transparent;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const ContactEditBtn = styled.button`\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/650/650194.png');\n  background-size: cover;\n  border: none;\n  background-color: transparent;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { fetchItems, removeItem } from '../../../redux/itemsApi';\nimport ContactEdit from '../ContactEdit';\nimport {\n  ContactListUl,\n  ContactItem,\n  ContactInfoContainer,\n  ContactEditBtn,\n  ContactDeleteBtn,\n  SpinerBox,\n} from './ContactList.styled';\nimport { useState } from 'react';\n\nconst ContactList = () => {\n  const filter = useSelector(state => state.filter.value);\n  const { contacts, isLoading, error } = useSelector(state => state.items);\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [contactId, setcontactId] = useState('');\n\n  const deleteContact = (contactId, contactName) => {\n    dispatch(removeItem(contactId));\n    toast.info(`\"${contactName}\" deleted from your contacts!`);\n  };\n\n  const getfiltredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchItems());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const getContactId = e => {\n    setcontactId(e.currentTarget.value);\n    toggleModal();\n  };\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {!contacts ? (\n        <SpinerBox>\n          <TailSpin color=\"#000\" height={25} width={25} />\n        </SpinerBox>\n      ) : (\n        <ContactListUl>\n          {getfiltredContacts().map(contact => (\n            <ContactItem key={contact.id}>\n              <ContactInfoContainer>\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/64/64572.png\"\n                  alt=\"contact-icon\"\n                  width=\"15px\"\n                  height=\"15px\"\n                />\n                <span>{contact.name}</span>\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/455/455705.png\"\n                  alt=\"contact-icon\"\n                  width=\"15px\"\n                  height=\"15px\"\n                />\n                <span>{contact.number}</span>\n              </ContactInfoContainer>\n              <ContactEditBtn\n                type=\"button\"\n                value={contact.id}\n                onClick={getContactId}\n                disabled={isLoading}\n              />\n              <ContactDeleteBtn\n                type=\"button\"\n                onClick={() => deleteContact(contact.id, contact.name)}\n                disabled={isLoading}\n              />\n            </ContactItem>\n          ))}\n        </ContactListUl>\n      )}\n      {showModal && <ContactEdit onClose={toggleModal} contactId={contactId} />}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section`\n  width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  background-color: aliceblue;\n  border: 2px solid lightblue;\n  border-radius: 6px;\n`;\n\nexport const FormBox = styled.div`\n  padding: 10px 10px 15px;\n`;\n\nexport const ContactsBox = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ContactsHeader = styled.h1`\n  margin: 30px 0 20px;\n  text-align: center;\n  color: #007bcd;\n  text-shadow: 1px 1px 3px gray;\n`;\n","import ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport {\n  Container,\n  FormBox,\n  ContactsHeader,\n  ContactsBox,\n} from './Phonebook.styled';\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <FormBox>\n        <ContactForm />\n      </FormBox>\n      <ContactsHeader>Contacts</ContactsHeader>\n      <ContactsBox>\n        <Filter />\n        <ContactList />\n      </ContactsBox>\n    </Container>\n  );\n}\n"],"names":["axios","fetchItems","dispatch","fetchItemsRequest","response","data","items","fetchItemsSuccess","fetchItemsFailure","message","toast","addItem","item","name","editItem","itemId","PhonebookContainer","styled","PhonebookForm","PhonebookLabel","PhonebookInput","PhonebookBtn","SpinerBox","useSelector","state","contacts","isLoading","isSuccess","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","inputName","elements","value","inputNamber","number","find","contact","toLowerCase","toLocaleLowerCase","contactObj","reset","onSubmit","htmlFor","type","pattern","title","required","disabled","color","height","width","src","alt","FilterBox","FilterLabel","FilterInput","filter","onChange","setFilter","Overlay","EditBox","EditForm","EditLabel","EditInput","EditBtn","EditBtnBox","EditContactsHeader","modalRoot","document","querySelector","onClose","contactId","contactName","id","contactNumber","useState","setName","setNumber","handleChange","target","editedContact","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","onClick","ContactListUl","ContactItem","ContactInfoContainer","ContactDeleteBtn","ContactEditBtn","error","showModal","setShowModal","setcontactId","deleteContact","toggleModal","getContactId","includes","map","Container","FormBox","ContactsBox","ContactsHeader","Phonebook"],"sourceRoot":""}