{"version":3,"file":"static/js/337.fdfc4b41.chunk.js","mappings":"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","sources":["redux/itemsApi.js","components/Phonebook/ContactForm/ContactForm.styled.jsx","components/Phonebook/ContactForm/index.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/index.jsx","components/Phonebook/ContactList/ContactList.styled.jsx","components/Phonebook/ContactList/index.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  fetchItemsRequest,\n  fetchItemsSuccess,\n  fetchItemsFailure,\n} from 'redux/items';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n//  Get user contacts\nexport const fetchItems = () => async dispatch => {\n  dispatch(fetchItemsRequest());\n\n  const response = await axios('/contacts');\n\n  try {\n    const items = await response.data;\n    dispatch(fetchItemsSuccess(items));\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Add new contact\nexport const addItem = item => async dispatch => {\n  const response = await axios.post('/contacts', item);\n\n  try {\n    await response.data;\n    dispatch(fetchItems());\n    toast.success(`\"${item.name}\" added to your contacts!`);\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Delete contact\nexport const removeItem = itemId => async dispatch => {\n  const response = await axios.delete(`/contacts/${itemId}`);\n\n  try {\n    const item = await response.data;\n    dispatch(fetchItems());\n    toast.info(`\"${item.name}\" deleted from your contacts!`);\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n\n//  Edit contact\nexport const editItem = (item, itemId) => async dispatch => {\n  const response = await axios.patch(`/contacts/${itemId}`, item);\n\n  try {\n    const item = await response.data;\n    dispatch(fetchItems());\n    toast.info(`\"${item.name}\" edited!`);\n  } catch (error) {\n    dispatch(fetchItemsFailure(error.message));\n    toast.error('Sorry! Something went wrong.');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const PhonebookContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const PhonebookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 175px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const PhonebookLabel = styled.label`\n  display: inline-flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n\nexport const PhonebookInput = styled.input`\n  outline: none;\n  padding: 5px;\n  margin-top: 5px;\n  border: 1px solid aliceblue;\n  border-radius: 2px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const PhonebookBtn = styled.button`\n  cursor: pointer;\n  width: 100px;\n  padding: 5px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    background-color: lightgoldenrodyellow;\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    box-shadow: rgba(0, 0, 0, 0.44) 0px 3px 8px;\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n// import { nanoid } from 'nanoid';\nimport { TailSpin } from 'react-loader-spinner';\nimport { addItem } from '../../../redux/itemsApi';\nimport {\n  PhonebookContainer,\n  PhonebookForm,\n  PhonebookLabel,\n  PhonebookBtn,\n  PhonebookInput,\n  SpinerBox,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const { contacts, isLoading, isSuccess } = useSelector(state => state.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const inputName = form.elements.name.value;\n    const inputNamber = form.elements.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === inputName.toLocaleLowerCase()\n      )\n    ) {\n      return toast.warn(`\"${inputName}\" is already in contacts.`);\n    }\n    // const contactObj = { id: nanoid(), name: inputName, phone: inputNamber };\n    const contactObj = { name: inputName, number: inputNamber\n    };\n\n    await dispatch(addItem(contactObj));\n    if (isSuccess) {\n      form.reset();\n    }\n  };\n\n  return (\n    <PhonebookContainer>\n      <PhonebookForm onSubmit={handleSubmit}>\n        <PhonebookLabel htmlFor=\"\">\n          Name\n          <PhonebookInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </PhonebookLabel>\n\n        <PhonebookLabel htmlFor=\"\">\n          Number\n          <PhonebookInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </PhonebookLabel>\n\n        <PhonebookBtn type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <SpinerBox>\n              <TailSpin color=\"#000\" height={16} width={16} />\n            </SpinerBox>\n          ) : (\n            '+Add Contact'\n          )}\n        </PhonebookBtn>\n      </PhonebookForm>\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/512/1485/1485097.png\"\n        alt=\"Phonebook\"\n        width=\"125px\"\n      />\n    </PhonebookContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const FilterLabel = styled.label`\n  display: inline-flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  outline: none;\n  padding: 5px;\n  margin-top: 5px;\n  border: 1px solid aliceblue;\n  border-radius: 2px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterLabel htmlFor=\"\">\n        Find contacts by name\n        <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ContactListUl = styled.ul`\n  margin: 0;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    margin-right: 5px;\n  }\n\n  span {\n    width: 150px;\n    margin-right: 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const ContactBtn = styled.button`\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/6861/6861362.png');\n  background-size: cover;\n  border: none;\n  background-color: transparent;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n\n  &:active {\n    transform: scale(0.95);\n\n    transition: all 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n\nexport const SpinerBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchItems, removeItem } from '../../../redux/itemsApi';\nimport {\n  ContactListUl,\n  ContactItem,\n  ContactInfoContainer,\n  ContactBtn,\n  SpinerBox,\n} from './ContactList.styled';\n\nconst ContactList = () => {\n  const filter = useSelector(state => state.filter.value);\n  const { contacts, isLoading, error } = useSelector(state => state.items);\n  const dispatch = useDispatch();\n\n  const deleteContact = contactId => {\n    dispatch(removeItem(contactId));\n  };\n\n  const getfiltredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchItems());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {!contacts ? (\n        <SpinerBox>\n          <TailSpin color=\"#000\" height={25} width={25} />\n        </SpinerBox>\n      ) : (\n        <ContactListUl>\n          {getfiltredContacts().map(contact => (\n            <ContactItem key={contact.id}>\n              <ContactInfoContainer>\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/64/64572.png\"\n                  alt=\"contact-icon\"\n                  width=\"15px\"\n                  height=\"15px\"\n                />\n                <span>{contact.name}</span>\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/455/455705.png\"\n                  alt=\"contact-icon\"\n                  width=\"15px\"\n                  height=\"15px\"\n                />\n                <span>{contact.number}</span>\n              </ContactInfoContainer>\n              <ContactBtn\n                type=\"button\"\n                onClick={() => deleteContact(contact.id, contact.name)}\n                disabled={isLoading}\n              />\n            </ContactItem>\n          ))}\n        </ContactListUl>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section`\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FormBox = styled.div`\n  width: 400px;\n  padding: 10px 10px 15px;\n  background-color: aliceblue;\n  border: 1px solid lightblue;\n  border-radius: 1px;\n`;\n\nexport const ContactsBox = styled.div`\n  width: 400px;\n  padding: 10px;\n  background-color: aliceblue;\n  border: 1px solid lightblue;\n  border-radius: 1px;\n`;\n","import ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport { Container, FormBox, ContactsBox } from './Phonebook.styled';\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormBox>\n        <ContactForm />\n      </FormBox>\n      <h2>Contacts</h2>\n      <ContactsBox>\n        <Filter />\n        <ContactList />\n      </ContactsBox>\n    </Container>\n  );\n}\n"],"names":["axios","fetchItems","dispatch","fetchItemsRequest","response","data","items","fetchItemsSuccess","fetchItemsFailure","message","toast","addItem","item","name","PhonebookContainer","styled","PhonebookForm","PhonebookLabel","PhonebookInput","PhonebookBtn","SpinerBox","useSelector","state","contacts","isLoading","isSuccess","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","inputName","elements","value","inputNamber","number","find","contact","toLowerCase","toLocaleLowerCase","contactObj","reset","onSubmit","htmlFor","type","pattern","title","required","disabled","color","height","width","src","alt","FilterBox","FilterLabel","FilterInput","filter","onChange","setFilter","ContactListUl","ContactItem","ContactInfoContainer","ContactBtn","error","deleteContact","contactId","itemId","useEffect","includes","map","onClick","id","Container","FormBox","ContactsBox","Phonebook"],"sourceRoot":""}